// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WatchList.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using WatchList;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using WatchList.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/Icemen/Projects/PracticeProjects/WatchList/_Imports.razor"
using WatchList.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/Icemen/Projects/PracticeProjects/WatchList/Pages/Index.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/Icemen/Projects/PracticeProjects/WatchList/Pages/Index.razor"
using WatchList.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/Icemen/Projects/PracticeProjects/WatchList/Pages/Index.razor"
using WatchList.Components.Tabs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/Icemen/Projects/PracticeProjects/WatchList/Pages/Index.razor"
using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 188 "/Users/Icemen/Projects/PracticeProjects/WatchList/Pages/Index.razor"
       

    private List<Entertainment> movies = new List<Entertainment>();
    List<Entertainment> myList = new List<Entertainment>();
    string searchTerm = "";
    bool toggle = true;
    bool watchListReturn = false;

    private TabControl controlTab;
    private TabPage watchListPage;
    private TabPage searchResult;

   



    async void GetSearchEvent(ChangeEventArgs args)
    {
        searchTerm = args.Value.ToString();
        if (searchTerm != "" || searchTerm != null)
        {
            movies = await MoviesService.GetMovies(searchTerm);
        }
        else
        {
            movies = null;
        }
        controlTab.ActivatePage(searchResult);
        StateHasChanged();
    }
    [Parameter]
    public EventCallback onAddList { get; set; }

    private async Task addMovie(Entertainment e)
    {
        Entertainment selectedMovie = new Entertainment();

        selectedMovie = await MoviesService.GetMovie(e.ImdbID);
        myList.Add(selectedMovie);
        movies.Remove(e);

        await ProtectedSessionStore.SetAsync("myList", myList);

        controlTab.ActivatePage(watchListPage);


    }

    private async Task deleteMovie(Entertainment e)
    {
        myList.Remove(e);
        movies.Add(e);
        await ProtectedSessionStore.SetAsync("myList", myList);
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<List<Entertainment>>("myList");
        var resultTab = await ProtectedSessionStore.GetAsync<bool>("watchListReturn");
        if (result.Value != null)
        {
            myList = result.Value;
            StateHasChanged();
        }

        if (resultTab.Value != false)
        {
            controlTab.ActivatePage(watchListPage);
        }

    }


    private async Task orderBy(string orderName)
    {
        toggle = !toggle;

        switch (orderName)
        {
            case "Runtime":
                if (toggle)
                {
                    myList = myList.OrderBy(x => int.Parse(x.Runtime.Replace("min", ""))).ToList();

                }
                else
                {
                    myList = myList.OrderByDescending(x => int.Parse(x.Runtime.Replace("min", ""))).ToList();

                }

                break;
            case "Title":
                if (toggle)
                {
                    myList = myList.OrderBy(x => x.Title).ToList();
                }
                else
                {
                    myList = myList.OrderByDescending(x => x.Title).ToList();
                }
                break;
            case "Ratings":
                if (toggle)
                {
                    myList = myList.OrderBy(x => decimal.Parse(x.Rate.Replace("/10", ""))).ToList();
                }
                else
                {
                    myList = myList.OrderByDescending(x => decimal.Parse(x.Rate.Replace("/10", ""))).ToList();
                }
                break;
            default:
                myList = myList.OrderBy(x => x.Title).ToList();
                break;
        }

        await ProtectedSessionStore.SetAsync("myList", myList);
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ApiGetMoviesService MoviesService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ProtectedSessionStorage ProtectedSessionStore { get; set; }
    }
}
#pragma warning restore 1591
